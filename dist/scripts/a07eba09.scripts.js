"use strict";angular.module("angularconwayApp",["ngResource","ngRoute"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]);var ConwayGrid=function(a){this.size=a,this.rows=[],this.ruleEngine=new ConwayRuleEngine};ConwayGrid.prototype.initialize=function(a){for(var b=this.size,c=0;b>c;c++){for(var d=[],e=0;b>e;e++)d.push({alive:100*Math.random()<a});this.rows.push(d)}},ConwayGrid.prototype.toggleCell=function(a,b){this.rows[a][b].alive=!this.rows[a][b].alive},ConwayGrid.prototype.reseed=function(a){for(var b=0;b<this.rows.length;b++)for(var c=0;c<this.rows[b].length;c++)this.rows[b][c].alive=100*Math.random()<a},ConwayGrid.prototype.load=function(a){var b=_.map(a,function(a){return _.map(a,function(a){return 1===a?{alive:!0}:{alive:!1}})});this.rows=b},ConwayGrid.prototype.getLiveNeighbours=function(a,b){var c=0,d=b>0,e=b<this.rows[0].length-1;if(a>0){var f=this.rows[a-1];d&&f[b-1].alive&&c++,f[b].alive&&c++,e&&f[b+1].alive&&c++}if(a<this.rows.length-1){var g=this.rows[a+1];d&&g[b-1].alive&&c++,g[b].alive&&c++,e&&g[b+1].alive&&c++}return d&&this.rows[a][b-1].alive&&c++,e&&this.rows[a][b+1].alive&&c++,c},ConwayGrid.prototype.shouldCellChange=function(a,b,c){var d=c[a][b],e=this.getLiveNeighbours(a,b);return this.ruleEngine.shouldCellChange(a,b,d,e)},ConwayGrid.prototype.process=function(){for(var a=this.rows,b=[],c=0;c<a.length;c++)for(var d=0;d<a[c].length;d++){var e=this.shouldCellChange(c,d,a);e&&b.push(e)}for(var f=0;f<b.length;f++)this.toggleCell(b[f].row,b[f].cell);return b.length};var ConwayRuleEngine=function(){};ConwayRuleEngine.prototype.shouldCellChange=function(a,b,c,d){return c.alive===!0&&2>d?{row:a,cell:b,alive:!1}:c.alive!==!0||2!==d&&3!==d?c.alive===!0&&d>3?{row:a,cell:b,alive:!1}:3===d&&c.alive!==!0?{row:a,cell:b,alive:!0}:void 0:null},angular.module("angularconwayApp").controller("MainCtrl",["$scope","$log","$interval","$http",function(a,b,c,d){a.seedpct=50,a.grid=new ConwayGrid(80),d.get("patterns/spaceinvader.js").success(function(b){a.grid.load(b)});var e=function(){a.grid.reseed(a.seedpct)},f=function(){a.grid.process()};a.toggle=function(b,c){a.grid.toggleCell(b,c)},a.showNeighbours=function(c,d){b.info("neighbours: "+a.grid.getLiveNeighbours(c,d))},a.restart=function(b){a.stop(),e(),a.start(b)},a.export=function(){var c=_.map(a.grid.rows,function(a){return _.map(a,function(a){return a.alive?1:0})}),d=document.createElement("a");d.href="data:text/json,"+encodeURI(JSON.stringify(c)),d.target="_blank",d.download="conwaygrid.json",d.click(),b.info(JSON.stringify(c))},a.imported={},a.importFile=function(){b.info("loading data into grid:"),b.info(a.imported),a.grid.load(JSON.parse(a.imported))},a.step=function(){f()};var g;a.start=function(d){angular.isDefined(g)||(g=c(function(){var b=f();0===b&&(a.stop(),d&&d())},200),b.info("started"))},a.stop=function(){angular.isDefined(g)&&(c.cancel(g),g=void 0,b.info("stopped"))},a.$on("$destroy",function(){a.stop()})}]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(a,b){b.bind("change",function(b){var c=new FileReader;c.onload=function(b){a.$apply(function(){a.fileread=b.target.result,console.log(a.fileread)})},c.readAsText(b.target.files[0])})}}}]);